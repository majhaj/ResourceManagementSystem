@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using ResourceManagementSystem.UI.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Logowanie</h3>

<EditForm Model="login" OnValidSubmit="HandleLogin" OnInvalidSubmit="HandleInvalidLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-2">
        <InputText @bind-Value="login.Email" placeholder="Email" class="form-control" />
        <ValidationMessage For="@(() => login.Email)" />
    </div>

    <div class="mb-2">
        <InputText @bind-Value="login.Password" placeholder="Hasło" type="password" class="form-control" />
        <ValidationMessage For="@(() => login.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Zaloguj</button>

    @if (!string.IsNullOrWhiteSpace(errorMessage))
    {
        <div class="text-danger mt-2">@errorMessage</div>
    }
</EditForm>

@code {
    private UserLogin login = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        Console.WriteLine($"Wysyłam login: {login.Email}, {login.Password}");

        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", login);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<JwtTokenResponse>();

                if (!string.IsNullOrWhiteSpace(result?.Token))
                {
                    // Tu możesz zapisać token np. do localStorage
                    Navigation.NavigateTo("/tasks");
                }
                else
                {
                    errorMessage = "Błąd: nie udało się odczytać tokena.";
                }
            }
            else
            {
                errorMessage = "Nieprawidłowy email lub hasło.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Wystąpił błąd: {ex.Message}";
        }
    }

    private void HandleInvalidLogin()
    {
        errorMessage = "Formularz zawiera błędy. Proszę poprawić.";
    }

    private class JwtTokenResponse
    {
        public string Token { get; set; } = string.Empty;
    }
}
